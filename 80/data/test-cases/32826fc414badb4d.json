{
  "uid" : "32826fc414badb4d",
  "name" : "test_combinationSum[input_array18-20-(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)]",
  "fullName" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum#test_combinationSum",
  "historyId" : "3958d8f36c1003f22d241cd8cdfd41ec",
  "time" : {
    "start" : 1620663603576,
    "stop" : 1620663603576,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
  "statusTrace" : "input_array = [3, 9, 4], sum = 20\nexpected_result = '(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)'\n\n    @pytest.mark.parametrize(\n        \"input_array,sum,expected_result\",\n        [\n            ([2, 3, 5, 9], 9, \"(2 2 2 3)(2 2 5)(3 3 3)(9)\"),\n            ([2, 4, 6, 8], 8, \"(2 2 2 2)(2 2 4)(2 6)(4 4)(8)\"),\n            ([8, 1, 8, 6, 8], 12, \"(1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 6)(1 1 1 1 8)(6 6)\"),\n            ([7, 2, 6, 5], 16, \"(2 2 2 2 2 2 2 2)(2 2 2 2 2 6)(2 2 2 5 5)(2 2 5 7)(2 2 6 6)(2 7 7)(5 5 6)\"),\n            # 5\n            ([6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9], 6, \"(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\"),\n            ([5, 2, 2, 6], 3, \"Empty\"),\n            ([4, 6, 4, 2], 7, \"Empty\"),\n            ([8, 7, 1], 22, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 8)(1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 7 8)(1 1 1 1 1 1 8 8)(1 7 7 7)(7 7 8)\"),\n            # 9\n            ([6, 5, 6, 3, 3, 4, 3, 2, 2, 9, 9], 24, \"(2 2 2 2 2 2 2 2 2 2 2 2)(2 2 2 2 2 2 2 2 2 2 4)(2 2 2 2 2 2 2 2 2 3 3)(2 2 2 2 2 2 2 2 2 6)(2 2 2 2 2 2 2 2 3 5)(2 2 2 2 2 2 2 2 4 4)(2 2 2 2 2 2 2 3 3 4)(2 2 2 2 2 2 2 4 6)(2 2 2 2 2 2 2 5 5)(2 2 2 2 2 2 3 3 3 3)(2 2 2 2 2 2 3 3 6)(2 2 2 2 2 2 3 4 5)(2 2 2 2 2 2 3 9)(2 2 2 2 2 2 4 4 4)(2 2 2 2 2 2 6 6)(2 2 2 2 2 3 3 3 5)(2 2 2 2 2 3 3 4 4)(2 2 2 2 2 3 5 6)(2 2 2 2 2 4 4 6)(2 2 2 2 2 4 5 5)(2 2 2 2 2 5 9)(2 2 2 2 3 3 3 3 4)(2 2 2 2 3 3 4 6)(2 2 2 2 3 3 5 5)(2 2 2 2 3 4 4 5)(2 2 2 2 3 4 9)(2 2 2 2 4 4 4 4)(2 2 2 2 4 6 6)(2 2 2 2 5 5 6)(2 2 2 3 3 3 3 3 3)(2 2 2 3 3 3 3 6)(2 2 2 3 3 3 4 5)(2 2 2 3 3 3 9)(2 2 2 3 3 4 4 4)(2 2 2 3 3 6 6)(2 2 2 3 4 5 6)(2 2 2 3 5 5 5)(2 2 2 3 6 9)(2 2 2 4 4 4 6)(2 2 2 4 4 5 5)(2 2 2 4 5 9)(2 2 2 6 6 6)(2 2 2 9 9)(2 2 3 3 3 3 3 5)(2 2 3 3 3 3 4 4)(2 2 3 3 3 5 6)(2 2 3 3 4 4 6)(2 2 3 3 4 5 5)(2 2 3 3 5 9)(2 2 3 4 4 4 5)(2 2 3 4 4 9)(2 2 3 5 6 6)(2 2 4 4 4 4 4)(2 2 4 4 6 6)(2 2 4 5 5 6)(2 2 5 5 5 5)(2 2 5 6 9)(2 3 3 3 3 3 3 4)(2 3 3 3 3 4 6)(2 3 3 3 3 5 5)(2 3...\"),\n            ([6, 5, 5, 7], 1, \"Empty\"),\n            ([7, 3, 9, 8, 4, 5], 8, \"(3 5)(4 4)(8)\"),\n            ([1, 1, 1, 3, 7, 3], 15, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 3 3 3)(1 1 1 1 1 3 7)(1 1 1 3 3 3 3)(1 1 3 3 7)(1 7 7)(3 3 3 3 3)\"),\n            # 13\n            ([6, 8, 7, 7, 9], 14, \"(6 8)(7 7)\"),\n            ([7, 3, 9, 2, 7, 7], 2, \"(2)\"),\n            ([6, 3, 7], 18, \"(3 3 3 3 3 3)(3 3 3 3 6)(3 3 6 6)(6 6 6)\"),\n            ([3, 8, 3, 9], 17, \"(3 3 3 8)(8 9)\"),\n            # 17\n            ([4, 3, 1], 3, \"(1 1 1)(3)\"),\n            ([8, 6, 4, 7, 6, 5, 3, 6, 3], 4, \"(4)\"),\n            ([3, 9, 4], 20, \"(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\"),\n            ([1, 8], 16, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\"),\n            # 21\n            ([4, 7], 24, \"(4 4 4 4 4 4)\"),\n            ([2, 3, 7, 5, 3, 3, 8, 9, 6, 2], 1, \"Empty\"),\n            ([5, 9, 5, 7, 8], 13, \"(5 8)\"),\n            ([7, 1, 9, 5, 1, 8, 5, 3], 13, \"(1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 5)(1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 7)(1 1 1 1 1 3 5)(1 1 1 1 1 8)(1 1 1 1 3 3 3)(1 1 1 1 9)(1 1 1 3 7)(1 1 1 5 5)(1 1 3 3 5)(1 1 3 8)(1 3 3 3 3)(1 3 9)(1 5 7)(3 3 7)(3 5 5)(5 8)\"),\n            # 25\n            ([6, 3, 4, 8, 9, 8, 9, 2, 4, 8], 19, \"(2 2 2 2 2 2 2 2 3)(2 2 2 2 2 2 3 4)(2 2 2 2 2 3 3 3)(2 2 2 2 2 3 6)(2 2 2 2 2 9)(2 2 2 2 3 4 4)(2 2 2 2 3 8)(2 2 2 3 3 3 4)(2 2 2 3 4 6)(2 2 2 4 9)(2 2 3 3 3 3 3)(2 2 3 3 3 6)(2 2 3 3 9)(2 2 3 4 4 4)(2 2 3 4 8)(2 2 3 6 6)(2 2 6 9)(2 3 3 3 4 4)(2 3 3 3 8)(2 3 4 4 6)(2 3 6 8)(2 4 4 9)(2 8 9)(3 3 3 3 3 4)(3 3 3 4 6)(3 3 4 9)(3 4 4 4 4)(3 4 4 8)(3 4 6 6)(3 8 8)(4 6 9)\"),\n            ([4, 7, 7, 1, 3, 2, 8, 8, 9, 3], 7, \"(1 1 1 1 1 1 1)(1 1 1 1 1 2)(1 1 1 1 3)(1 1 1 2 2)(1 1 1 4)(1 1 2 3)(1 2 2 2)(1 2 4)(1 3 3)(2 2 3)(3 4)(7)\"),\n            ([8, 5], 4, \"Empty\"),\n            ([7, 1, 3, 1, 3, 4, 7, 3, 9, 6], 23, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 9)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 4 6)(1 1 1 1 1 1 1 1 1 1 1 1 3 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 4 7)(1 1 1 1 1 1 1 1 1 1 1 3 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 3 3 6)(1 1 1 1 1 1 1 1 1 1 1 3 9)(1 1 1 1 1 1 1 1 1 1 1 4 4 4)(1 1 1 1 1 1 1 1 1 1 1 6 6)(1 1 1 1 1 1 1 1 1 1 3 3 3 4)(1 1 1 1 1 1 1 1 1 1 3 3 7)(1 1 1 1 1 1 1 1 1 1 3 4 6)(1 1 1 1 1 1 1 1 1 1 4 9)(1 1 1 1 1 1 1 1 1 1 6 7)(1 1 1 1 1 1 1 1 1 3 3 4 4)(1 1 1 1 1 1 1 1 1 3 4 7)(1 1 1 1 1 1 1 1 1 4 4 6)(1 1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 1 3 3 3 3 3)(1 1 1 1 1 1 1 1 3 3 3 6)(1 1...\"),\n        ],\n    )\n    def test_combinationSum(input_array: List[int], sum: int, expected_result: str):\n>       assert expected_result == combinationSum(input_array, sum)\nE       AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\nE         - (1 1)(1 1)(1 1)\nE         + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\n\nsrc/test/java/challenges/a20200530_combinationSum/test_combinationSum.py:46: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.challenges.a20200530_combinationSum"
  }, {
    "name" : "suite",
    "value" : "test_combinationSum"
  }, {
    "name" : "host",
    "value" : "fv-az199-620"
  }, {
    "name" : "thread",
    "value" : "2464-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_result",
    "value" : "'(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)'"
  }, {
    "name" : "input_array",
    "value" : "[3, 9, 4]"
  }, {
    "name" : "sum",
    "value" : "20"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 24,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 24
      },
      "items" : [ {
        "uid" : "cebed87fdf7b722e",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/79//#testresult/cebed87fdf7b722e",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620660718826,
          "stop" : 1620660718826,
          "duration" : 0
        }
      }, {
        "uid" : "3b4e149ad7eabee1",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/78//#testresult/3b4e149ad7eabee1",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620660373574,
          "stop" : 1620660373574,
          "duration" : 0
        }
      }, {
        "uid" : "d4f098519b332993",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/77//#testresult/d4f098519b332993",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620634842380,
          "stop" : 1620634842380,
          "duration" : 0
        }
      }, {
        "uid" : "46586ed7a50603e5",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/76//#testresult/46586ed7a50603e5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620634246461,
          "stop" : 1620634246461,
          "duration" : 0
        }
      }, {
        "uid" : "6b569495c1a66fbc",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/75//#testresult/6b569495c1a66fbc",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620633862358,
          "stop" : 1620633862358,
          "duration" : 0
        }
      }, {
        "uid" : "462a99532ed2655b",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/74//#testresult/462a99532ed2655b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620632837562,
          "stop" : 1620632837562,
          "duration" : 0
        }
      }, {
        "uid" : "720c133c77a27e62",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/73//#testresult/720c133c77a27e62",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620588771523,
          "stop" : 1620588771523,
          "duration" : 0
        }
      }, {
        "uid" : "b34b8fb21aa11988",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/72//#testresult/b34b8fb21aa11988",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620587343675,
          "stop" : 1620587343675,
          "duration" : 0
        }
      }, {
        "uid" : "b7f6774c86c3f744",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/71//#testresult/b7f6774c86c3f744",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620582483313,
          "stop" : 1620582483314,
          "duration" : 1
        }
      }, {
        "uid" : "1120c96fc46dfeeb",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/70//#testresult/1120c96fc46dfeeb",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620582063410,
          "stop" : 1620582063411,
          "duration" : 1
        }
      }, {
        "uid" : "41f0ebf4a5dc9b3c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/69//#testresult/41f0ebf4a5dc9b3c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620581514330,
          "stop" : 1620581514330,
          "duration" : 0
        }
      }, {
        "uid" : "65fafaf46edae602",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/68//#testresult/65fafaf46edae602",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620581310198,
          "stop" : 1620581310198,
          "duration" : 0
        }
      }, {
        "uid" : "aa9221bf1f456bf5",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/67//#testresult/aa9221bf1f456bf5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620580993531,
          "stop" : 1620580993531,
          "duration" : 0
        }
      }, {
        "uid" : "a0bc1b4e1e26fe7a",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/66//#testresult/a0bc1b4e1e26fe7a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620580708160,
          "stop" : 1620580708160,
          "duration" : 0
        }
      }, {
        "uid" : "274b4302ee1aab3c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/65//#testresult/274b4302ee1aab3c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620580025019,
          "stop" : 1620580025020,
          "duration" : 1
        }
      }, {
        "uid" : "12da13e09be68613",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/64//#testresult/12da13e09be68613",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620579335502,
          "stop" : 1620579335503,
          "duration" : 1
        }
      }, {
        "uid" : "496141359bb91e53",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/63//#testresult/496141359bb91e53",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620559739796,
          "stop" : 1620559739796,
          "duration" : 0
        }
      }, {
        "uid" : "db8369c2398dcae6",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/62//#testresult/db8369c2398dcae6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620559704818,
          "stop" : 1620559704819,
          "duration" : 1
        }
      }, {
        "uid" : "a65a46a4f2ac0db5",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/59//#testresult/a65a46a4f2ac0db5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620559616833,
          "stop" : 1620559616834,
          "duration" : 1
        }
      }, {
        "uid" : "dda2274f7a6c1432",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/57//#testresult/dda2274f7a6c1432",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(3 3 3 3 4 4...9)(4 4 4 4 4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)",
        "time" : {
          "start" : 1620559551699,
          "stop" : 1620559551699,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "32826fc414badb4d.json",
  "parameterValues" : [ "'(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)'", "[3, 9, 4]", "20" ]
}