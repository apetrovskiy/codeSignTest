{
  "uid" : "f5af5ffc3bcd75e7",
  "name" : "test_running_water[cap0-2-True]",
  "fullName" : "src.test.java.challenges.a20201217_runningWater.test_running_water#test_running_water",
  "historyId" : "7a03f97f9ec75d3ab8dc4f3cb23c5d18",
  "time" : {
    "start" : 1620413380816,
    "stop" : 1620413380816,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
  "statusTrace" : "cap = [1, 1, 1], volume = 2, expected_result = True\n\n    @pytest.mark.parametrize(\"cap,volume,expected_result\", test_data)\n    def test_running_water(cap: List[int], volume: int, expected_result: bool):\n>       assert expected_result == runningWater(cap, volume)\nE       assert True == False\nE        +  where False = runningWater([1, 1, 1], 2)\n\nsrc/test/java/challenges/a20201217_runningWater/test_running_water.py:24: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.challenges.a20201217_runningWater"
  }, {
    "name" : "suite",
    "value" : "test_running_water"
  }, {
    "name" : "host",
    "value" : "fv-az269-349"
  }, {
    "name" : "thread",
    "value" : "2381-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.a20201217_runningWater.test_running_water"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "cap",
    "value" : "[1, 1, 1]"
  }, {
    "name" : "expected_result",
    "value" : "True"
  }, {
    "name" : "volume",
    "value" : "2"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 34,
        "broken" : 0,
        "skipped" : 3,
        "passed" : 0,
        "unknown" : 0,
        "total" : 37
      },
      "items" : [ {
        "uid" : "37c328690f81ad56",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/33//#testresult/37c328690f81ad56",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620412551567,
          "stop" : 1620412551567,
          "duration" : 0
        }
      }, {
        "uid" : "aab2f5380c1d151",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/32//#testresult/aab2f5380c1d151",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620405565042,
          "stop" : 1620405565042,
          "duration" : 0
        }
      }, {
        "uid" : "b80719c691d4ec2a",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/31//#testresult/b80719c691d4ec2a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620405503838,
          "stop" : 1620405503838,
          "duration" : 0
        }
      }, {
        "uid" : "df310394a57deed8",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/29//#testresult/df310394a57deed8",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620405454679,
          "stop" : 1620405454680,
          "duration" : 1
        }
      }, {
        "uid" : "6858c1799bd806ca",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/28//#testresult/6858c1799bd806ca",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620405421899,
          "stop" : 1620405421899,
          "duration" : 0
        }
      }, {
        "uid" : "79976c9d16fd6153",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/27//#testresult/79976c9d16fd6153",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620405379889,
          "stop" : 1620405379889,
          "duration" : 0
        }
      }, {
        "uid" : "ad0c54ad3c917d1a",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/25//#testresult/ad0c54ad3c917d1a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620405321424,
          "stop" : 1620405321424,
          "duration" : 0
        }
      }, {
        "uid" : "cf07fbec534ca234",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/23//#testresult/cf07fbec534ca234",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620405269759,
          "stop" : 1620405269759,
          "duration" : 0
        }
      }, {
        "uid" : "5d6f307fe27747af",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/21//#testresult/5d6f307fe27747af",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620405205224,
          "stop" : 1620405205224,
          "duration" : 0
        }
      }, {
        "uid" : "4c87f0225df3178d",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/18//#testresult/4c87f0225df3178d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620405140157,
          "stop" : 1620405140157,
          "duration" : 0
        }
      }, {
        "uid" : "1b754860e55048c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/17//#testresult/1b754860e55048c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620396200398,
          "stop" : 1620396200399,
          "duration" : 1
        }
      }, {
        "uid" : "2daf5edbbb87ef52",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/16//#testresult/2daf5edbbb87ef52",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620396096698,
          "stop" : 1620396096698,
          "duration" : 0
        }
      }, {
        "uid" : "2536982f8731a17c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/15//#testresult/2536982f8731a17c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620337341960,
          "stop" : 1620337341960,
          "duration" : 0
        }
      }, {
        "uid" : "b5aded0fd4320f9c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/14//#testresult/b5aded0fd4320f9c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1620337299686,
          "stop" : 1620337299687,
          "duration" : 1
        }
      }, {
        "uid" : "2dea7fc9456e04b3",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/13//#testresult/2dea7fc9456e04b3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1619805668927,
          "stop" : 1619805668928,
          "duration" : 1
        }
      }, {
        "uid" : "eb4e8f2c26e9db8b",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/12//#testresult/eb4e8f2c26e9db8b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1619397477350,
          "stop" : 1619397477350,
          "duration" : 0
        }
      }, {
        "uid" : "9840501f7bb8ca4d",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/11//#testresult/9840501f7bb8ca4d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1619389882570,
          "stop" : 1619389882571,
          "duration" : 1
        }
      }, {
        "uid" : "9f3da1ebff25bea2",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/10//#testresult/9f3da1ebff25bea2",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1619387967516,
          "stop" : 1619387967516,
          "duration" : 0
        }
      }, {
        "uid" : "f9fcdab98c61194",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/9//#testresult/f9fcdab98c61194",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1619386455249,
          "stop" : 1619386455249,
          "duration" : 0
        }
      }, {
        "uid" : "cfdf28e759794dff",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/7//#testresult/cfdf28e759794dff",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([1, 1, 1], 2)",
        "time" : {
          "start" : 1619385428143,
          "stop" : 1619385428143,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f5af5ffc3bcd75e7.json",
  "parameterValues" : [ "[1, 1, 1]", "True", "2" ]
}