{
  "uid" : "e4db4489dba4cec4",
  "name" : "test_combinationSum[input_array16-3-(1 1 1)(3)]",
  "fullName" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum#test_combinationSum",
  "historyId" : "d403784ee53af6a3ca182ae19920b37e",
  "time" : {
    "start" : 1621953167783,
    "stop" : 1621953167784,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
  "statusTrace" : "input_array = [4, 3, 1], sum = 3, expected_result = '(1 1 1)(3)'\n\n    @pytest.mark.parametrize(\n        \"input_array,sum,expected_result\",\n        [\n            ([2, 3, 5, 9], 9, \"(2 2 2 3)(2 2 5)(3 3 3)(9)\"),\n            ([2, 4, 6, 8], 8, \"(2 2 2 2)(2 2 4)(2 6)(4 4)(8)\"),\n            ([8, 1, 8, 6, 8\n              ], 12, \"(1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 6)(1 1 1 1 8)(6 6)\"),\n            ([7, 2, 6, 5], 16,\n             \"(2 2 2 2 2 2 2 2)(2 2 2 2 2 6)(2 2 2 5 5)(2 2 5 7)(2 2 6 6)(2 7 7)(5 5 6)\"\n             ),\n            # 5\n            ([6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9\n              ], 6, \"(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\"),\n            ([5, 2, 2, 6], 3, \"Empty\"),\n            ([4, 6, 4, 2], 7, \"Empty\"),\n            ([8, 7, 1], 22,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 8)(1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 7 8)(1 1 1 1 1 1 8 8)(1 7 7 7)(7 7 8)\"\n             ),\n            # 9\n            ([6, 5, 6, 3, 3, 4, 3, 2, 2, 9, 9], 24,\n             \"(2 2 2 2 2 2 2 2 2 2 2 2)(2 2 2 2 2 2 2 2 2 2 4)(2 2 2 2 2 2 2 2 2 3 3)(2 2 2 2 2 2 2 2 2 6)(2 2 2 2 2 2 2 2 3 5)(2 2 2 2 2 2 2 2 4 4)(2 2 2 2 2 2 2 3 3 4)(2 2 2 2 2 2 2 4 6)(2 2 2 2 2 2 2 5 5)(2 2 2 2 2 2 3 3 3 3)(2 2 2 2 2 2 3 3 6)(2 2 2 2 2 2 3 4 5)(2 2 2 2 2 2 3 9)(2 2 2 2 2 2 4 4 4)(2 2 2 2 2 2 6 6)(2 2 2 2 2 3 3 3 5)(2 2 2 2 2 3 3 4 4)(2 2 2 2 2 3 5 6)(2 2 2 2 2 4 4 6)(2 2 2 2 2 4 5 5)(2 2 2 2 2 5 9)(2 2 2 2 3 3 3 3 4)(2 2 2 2 3 3 4 6)(2 2 2 2 3 3 5 5)(2 2 2 2 3 4 4 5)(2 2 2 2 3 4 9)(2 2 2 2 4 4 4 4)(2 2 2 2 4 6 6)(2 2 2 2 5 5 6)(2 2 2 3 3 3 3 3 3)(2 2 2 3 3 3 3 6)(2 2 2 3 3 3 4 5)(2 2 2 3 3 3 9)(2 2 2 3 3 4 4 4)(2 2 2 3 3 6 6)(2 2 2 3 4 5 6)(2 2 2 3 5 5 5)(2 2 2 3 6 9)(2 2 2 4 4 4 6)(2 2 2 4 4 5 5)(2 2 2 4 5 9)(2 2 2 6 6 6)(2 2 2 9 9)(2 2 3 3 3 3 3 5)(2 2 3 3 3 3 4 4)(2 2 3 3 3 5 6)(2 2 3 3 4 4 6)(2 2 3 3 4 5 5)(2 2 3 3 5 9)(2 2 3 4 4 4 5)(2 2 3 4 4 9)(2 2 3 5 6 6)(2 2 4 4 4 4 4)(2 2 4 4 6 6)(2 2 4 5 5 6)(2 2 5 5 5 5)(2 2 5 6 9)(2 3 3 3 3 3 3 4)(2 3 3 3 3 4 6)(2 3 3 3 3 5 5)(2 3...\"\n             ),\n            ([6, 5, 5, 7], 1, \"Empty\"),\n            ([7, 3, 9, 8, 4, 5], 8, \"(3 5)(4 4)(8)\"),\n            ([1, 1, 1, 3, 7, 3], 15,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 3 3 3)(1 1 1 1 1 3 7)(1 1 1 3 3 3 3)(1 1 3 3 7)(1 7 7)(3 3 3 3 3)\"\n             ),\n            # 13\n            ([6, 8, 7, 7, 9], 14, \"(6 8)(7 7)\"),\n            ([7, 3, 9, 2, 7, 7], 2, \"(2)\"),\n            ([6, 3, 7], 18, \"(3 3 3 3 3 3)(3 3 3 3 6)(3 3 6 6)(6 6 6)\"),\n            ([3, 8, 3, 9], 17, \"(3 3 3 8)(8 9)\"),\n            # 17\n            ([4, 3, 1], 3, \"(1 1 1)(3)\"),\n            ([8, 6, 4, 7, 6, 5, 3, 6, 3], 4, \"(4)\"),\n            ([3, 9, 4], 20, \"(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\"),\n            ([1, 8\n              ], 16, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\"),\n            # 21\n            ([4, 7], 24, \"(4 4 4 4 4 4)\"),\n            ([2, 3, 7, 5, 3, 3, 8, 9, 6, 2], 1, \"Empty\"),\n            ([5, 9, 5, 7, 8], 13, \"(5 8)\"),\n            ([7, 1, 9, 5, 1, 8, 5, 3], 13,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 5)(1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 7)(1 1 1 1 1 3 5)(1 1 1 1 1 8)(1 1 1 1 3 3 3)(1 1 1 1 9)(1 1 1 3 7)(1 1 1 5 5)(1 1 3 3 5)(1 1 3 8)(1 3 3 3 3)(1 3 9)(1 5 7)(3 3 7)(3 5 5)(5 8)\"\n             ),\n            # 25\n            ([6, 3, 4, 8, 9, 8, 9, 2, 4, 8], 19,\n             \"(2 2 2 2 2 2 2 2 3)(2 2 2 2 2 2 3 4)(2 2 2 2 2 3 3 3)(2 2 2 2 2 3 6)(2 2 2 2 2 9)(2 2 2 2 3 4 4)(2 2 2 2 3 8)(2 2 2 3 3 3 4)(2 2 2 3 4 6)(2 2 2 4 9)(2 2 3 3 3 3 3)(2 2 3 3 3 6)(2 2 3 3 9)(2 2 3 4 4 4)(2 2 3 4 8)(2 2 3 6 6)(2 2 6 9)(2 3 3 3 4 4)(2 3 3 3 8)(2 3 4 4 6)(2 3 6 8)(2 4 4 9)(2 8 9)(3 3 3 3 3 4)(3 3 3 4 6)(3 3 4 9)(3 4 4 4 4)(3 4 4 8)(3 4 6 6)(3 8 8)(4 6 9)\"\n             ),\n            ([4, 7, 7, 1, 3, 2, 8, 8, 9, 3], 7,\n             \"(1 1 1 1 1 1 1)(1 1 1 1 1 2)(1 1 1 1 3)(1 1 1 2 2)(1 1 1 4)(1 1 2 3)(1 2 2 2)(1 2 4)(1 3 3)(2 2 3)(3 4)(7)\"\n             ),\n            ([8, 5], 4, \"Empty\"),\n            ([7, 1, 3, 1, 3, 4, 7, 3, 9, 6], 23,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 9)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 4 6)(1 1 1 1 1 1 1 1 1 1 1 1 3 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 4 7)(1 1 1 1 1 1 1 1 1 1 1 3 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 3 3 6)(1 1 1 1 1 1 1 1 1 1 1 3 9)(1 1 1 1 1 1 1 1 1 1 1 4 4 4)(1 1 1 1 1 1 1 1 1 1 1 6 6)(1 1 1 1 1 1 1 1 1 1 3 3 3 4)(1 1 1 1 1 1 1 1 1 1 3 3 7)(1 1 1 1 1 1 1 1 1 1 3 4 6)(1 1 1 1 1 1 1 1 1 1 4 9)(1 1 1 1 1 1 1 1 1 1 6 7)(1 1 1 1 1 1 1 1 1 3 3 4 4)(1 1 1 1 1 1 1 1 1 3 4 7)(1 1 1 1 1 1 1 1 1 4 4 6)(1 1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 1 3 3 3 3 3)(1 1 1 1 1 1 1 1 3 3 3 6)(1 1...\"\n             ),\n        ],\n    )\n    def test_combinationSum(input_array: List[int], sum: int,\n                            expected_result: str):\n>       assert expected_result == combinationSum(input_array, sum)\nE       AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\nE         - (1 1)(1 1)\nE         + (1 1 1)(3)\n\nsrc/test/java/challenges/a20200530_combinationSum/test_combinationSum.py:66: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.challenges.a20200530_combinationSum"
  }, {
    "name" : "suite",
    "value" : "test_combinationSum"
  }, {
    "name" : "host",
    "value" : "fv-az272-558"
  }, {
    "name" : "thread",
    "value" : "1818-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_result",
    "value" : "'(1 1 1)(3)'"
  }, {
    "name" : "input_array",
    "value" : "[4, 3, 1]"
  }, {
    "name" : "sum",
    "value" : "3"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 41,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 41
      },
      "items" : [ {
        "uid" : "a4a1200b5b984a84",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/98//#testresult/a4a1200b5b984a84",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1621950735011,
          "stop" : 1621950735011,
          "duration" : 0
        }
      }, {
        "uid" : "872a0d0b4173dab3",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/96//#testresult/872a0d0b4173dab3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1621949362565,
          "stop" : 1621949362565,
          "duration" : 0
        }
      }, {
        "uid" : "6f41864d97dcb6f3",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/95//#testresult/6f41864d97dcb6f3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1621531932255,
          "stop" : 1621531932255,
          "duration" : 0
        }
      }, {
        "uid" : "1fefb4fa9b9c4655",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/94//#testresult/1fefb4fa9b9c4655",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620951308883,
          "stop" : 1620951308884,
          "duration" : 1
        }
      }, {
        "uid" : "6e0fd7c33c19c203",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/92//#testresult/6e0fd7c33c19c203",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620951226667,
          "stop" : 1620951226667,
          "duration" : 0
        }
      }, {
        "uid" : "9d503be346eee601",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/91//#testresult/9d503be346eee601",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620951214484,
          "stop" : 1620951214485,
          "duration" : 1
        }
      }, {
        "uid" : "a360da63247590f0",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/90//#testresult/a360da63247590f0",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620951121906,
          "stop" : 1620951121906,
          "duration" : 0
        }
      }, {
        "uid" : "3b32548ac0113f10",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/89//#testresult/3b32548ac0113f10",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620950096780,
          "stop" : 1620950096780,
          "duration" : 0
        }
      }, {
        "uid" : "ac9f9f01714df87c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/88//#testresult/ac9f9f01714df87c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620933877466,
          "stop" : 1620933877467,
          "duration" : 1
        }
      }, {
        "uid" : "2cf929bbdb2ce8c5",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/87//#testresult/2cf929bbdb2ce8c5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620917155509,
          "stop" : 1620917155509,
          "duration" : 0
        }
      }, {
        "uid" : "1b92f3577fae3a5d",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/86//#testresult/1b92f3577fae3a5d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620892762949,
          "stop" : 1620892762949,
          "duration" : 0
        }
      }, {
        "uid" : "17782c0676eae21",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/85//#testresult/17782c0676eae21",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620888190019,
          "stop" : 1620888190020,
          "duration" : 1
        }
      }, {
        "uid" : "553fd4cbe84cda50",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/84//#testresult/553fd4cbe84cda50",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620887626827,
          "stop" : 1620887626827,
          "duration" : 0
        }
      }, {
        "uid" : "d308d6e5fa4e99d4",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/83//#testresult/d308d6e5fa4e99d4",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620764607870,
          "stop" : 1620764607870,
          "duration" : 0
        }
      }, {
        "uid" : "ec71156a80e2132",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/82//#testresult/ec71156a80e2132",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620720719410,
          "stop" : 1620720719411,
          "duration" : 1
        }
      }, {
        "uid" : "a82c4a10dc40fa45",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/81//#testresult/a82c4a10dc40fa45",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620719097723,
          "stop" : 1620719097723,
          "duration" : 0
        }
      }, {
        "uid" : "61bc377fe9e2bab6",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/80//#testresult/61bc377fe9e2bab6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620663603563,
          "stop" : 1620663603563,
          "duration" : 0
        }
      }, {
        "uid" : "64035755942ffc6c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/79//#testresult/64035755942ffc6c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620660718809,
          "stop" : 1620660718809,
          "duration" : 0
        }
      }, {
        "uid" : "84c6f8c357d061bf",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/78//#testresult/84c6f8c357d061bf",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620660373560,
          "stop" : 1620660373560,
          "duration" : 0
        }
      }, {
        "uid" : "90c96bb254755a60",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/77//#testresult/90c96bb254755a60",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)",
        "time" : {
          "start" : 1620634842366,
          "stop" : 1620634842366,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e4db4489dba4cec4.json",
  "parameterValues" : [ "'(1 1 1)(3)'", "[4, 3, 1]", "3" ]
}