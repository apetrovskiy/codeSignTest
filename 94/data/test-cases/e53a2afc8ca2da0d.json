{
  "uid" : "e53a2afc8ca2da0d",
  "name" : "test_combinationSum[input_array5-3-Empty]",
  "fullName" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum#test_combinationSum",
  "historyId" : "f2f422a54f73619ebc494d85ce02c0d5",
  "time" : {
    "start" : 1620951308817,
    "stop" : 1620951308818,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
  "statusTrace" : "input_array = [5, 2, 2, 6], sum = 3, expected_result = 'Empty'\n\n    @pytest.mark.parametrize(\n        \"input_array,sum,expected_result\",\n        [\n            ([2, 3, 5, 9], 9, \"(2 2 2 3)(2 2 5)(3 3 3)(9)\"),\n            ([2, 4, 6, 8], 8, \"(2 2 2 2)(2 2 4)(2 6)(4 4)(8)\"),\n            ([8, 1, 8, 6, 8], 12, \"(1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 6)(1 1 1 1 8)(6 6)\"),\n            ([7, 2, 6, 5], 16, \"(2 2 2 2 2 2 2 2)(2 2 2 2 2 6)(2 2 2 5 5)(2 2 5 7)(2 2 6 6)(2 7 7)(5 5 6)\"),\n            # 5\n            ([6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9], 6, \"(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\"),\n            ([5, 2, 2, 6], 3, \"Empty\"),\n            ([4, 6, 4, 2], 7, \"Empty\"),\n            ([8, 7, 1], 22, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 8)(1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 7 8)(1 1 1 1 1 1 8 8)(1 7 7 7)(7 7 8)\"),\n            # 9\n            ([6, 5, 6, 3, 3, 4, 3, 2, 2, 9, 9], 24, \"(2 2 2 2 2 2 2 2 2 2 2 2)(2 2 2 2 2 2 2 2 2 2 4)(2 2 2 2 2 2 2 2 2 3 3)(2 2 2 2 2 2 2 2 2 6)(2 2 2 2 2 2 2 2 3 5)(2 2 2 2 2 2 2 2 4 4)(2 2 2 2 2 2 2 3 3 4)(2 2 2 2 2 2 2 4 6)(2 2 2 2 2 2 2 5 5)(2 2 2 2 2 2 3 3 3 3)(2 2 2 2 2 2 3 3 6)(2 2 2 2 2 2 3 4 5)(2 2 2 2 2 2 3 9)(2 2 2 2 2 2 4 4 4)(2 2 2 2 2 2 6 6)(2 2 2 2 2 3 3 3 5)(2 2 2 2 2 3 3 4 4)(2 2 2 2 2 3 5 6)(2 2 2 2 2 4 4 6)(2 2 2 2 2 4 5 5)(2 2 2 2 2 5 9)(2 2 2 2 3 3 3 3 4)(2 2 2 2 3 3 4 6)(2 2 2 2 3 3 5 5)(2 2 2 2 3 4 4 5)(2 2 2 2 3 4 9)(2 2 2 2 4 4 4 4)(2 2 2 2 4 6 6)(2 2 2 2 5 5 6)(2 2 2 3 3 3 3 3 3)(2 2 2 3 3 3 3 6)(2 2 2 3 3 3 4 5)(2 2 2 3 3 3 9)(2 2 2 3 3 4 4 4)(2 2 2 3 3 6 6)(2 2 2 3 4 5 6)(2 2 2 3 5 5 5)(2 2 2 3 6 9)(2 2 2 4 4 4 6)(2 2 2 4 4 5 5)(2 2 2 4 5 9)(2 2 2 6 6 6)(2 2 2 9 9)(2 2 3 3 3 3 3 5)(2 2 3 3 3 3 4 4)(2 2 3 3 3 5 6)(2 2 3 3 4 4 6)(2 2 3 3 4 5 5)(2 2 3 3 5 9)(2 2 3 4 4 4 5)(2 2 3 4 4 9)(2 2 3 5 6 6)(2 2 4 4 4 4 4)(2 2 4 4 6 6)(2 2 4 5 5 6)(2 2 5 5 5 5)(2 2 5 6 9)(2 3 3 3 3 3 3 4)(2 3 3 3 3 4 6)(2 3 3 3 3 5 5)(2 3...\"),\n            ([6, 5, 5, 7], 1, \"Empty\"),\n            ([7, 3, 9, 8, 4, 5], 8, \"(3 5)(4 4)(8)\"),\n            ([1, 1, 1, 3, 7, 3], 15, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 3 3 3)(1 1 1 1 1 3 7)(1 1 1 3 3 3 3)(1 1 3 3 7)(1 7 7)(3 3 3 3 3)\"),\n            # 13\n            ([6, 8, 7, 7, 9], 14, \"(6 8)(7 7)\"),\n            ([7, 3, 9, 2, 7, 7], 2, \"(2)\"),\n            ([6, 3, 7], 18, \"(3 3 3 3 3 3)(3 3 3 3 6)(3 3 6 6)(6 6 6)\"),\n            ([3, 8, 3, 9], 17, \"(3 3 3 8)(8 9)\"),\n            # 17\n            ([4, 3, 1], 3, \"(1 1 1)(3)\"),\n            ([8, 6, 4, 7, 6, 5, 3, 6, 3], 4, \"(4)\"),\n            ([3, 9, 4], 20, \"(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\"),\n            ([1, 8], 16, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\"),\n            # 21\n            ([4, 7], 24, \"(4 4 4 4 4 4)\"),\n            ([2, 3, 7, 5, 3, 3, 8, 9, 6, 2], 1, \"Empty\"),\n            ([5, 9, 5, 7, 8], 13, \"(5 8)\"),\n            ([7, 1, 9, 5, 1, 8, 5, 3], 13, \"(1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 5)(1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 7)(1 1 1 1 1 3 5)(1 1 1 1 1 8)(1 1 1 1 3 3 3)(1 1 1 1 9)(1 1 1 3 7)(1 1 1 5 5)(1 1 3 3 5)(1 1 3 8)(1 3 3 3 3)(1 3 9)(1 5 7)(3 3 7)(3 5 5)(5 8)\"),\n            # 25\n            ([6, 3, 4, 8, 9, 8, 9, 2, 4, 8], 19, \"(2 2 2 2 2 2 2 2 3)(2 2 2 2 2 2 3 4)(2 2 2 2 2 3 3 3)(2 2 2 2 2 3 6)(2 2 2 2 2 9)(2 2 2 2 3 4 4)(2 2 2 2 3 8)(2 2 2 3 3 3 4)(2 2 2 3 4 6)(2 2 2 4 9)(2 2 3 3 3 3 3)(2 2 3 3 3 6)(2 2 3 3 9)(2 2 3 4 4 4)(2 2 3 4 8)(2 2 3 6 6)(2 2 6 9)(2 3 3 3 4 4)(2 3 3 3 8)(2 3 4 4 6)(2 3 6 8)(2 4 4 9)(2 8 9)(3 3 3 3 3 4)(3 3 3 4 6)(3 3 4 9)(3 4 4 4 4)(3 4 4 8)(3 4 6 6)(3 8 8)(4 6 9)\"),\n            ([4, 7, 7, 1, 3, 2, 8, 8, 9, 3], 7, \"(1 1 1 1 1 1 1)(1 1 1 1 1 2)(1 1 1 1 3)(1 1 1 2 2)(1 1 1 4)(1 1 2 3)(1 2 2 2)(1 2 4)(1 3 3)(2 2 3)(3 4)(7)\"),\n            ([8, 5], 4, \"Empty\"),\n            ([7, 1, 3, 1, 3, 4, 7, 3, 9, 6], 23, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 9)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 4 6)(1 1 1 1 1 1 1 1 1 1 1 1 3 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 4 7)(1 1 1 1 1 1 1 1 1 1 1 3 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 3 3 6)(1 1 1 1 1 1 1 1 1 1 1 3 9)(1 1 1 1 1 1 1 1 1 1 1 4 4 4)(1 1 1 1 1 1 1 1 1 1 1 6 6)(1 1 1 1 1 1 1 1 1 1 3 3 3 4)(1 1 1 1 1 1 1 1 1 1 3 3 7)(1 1 1 1 1 1 1 1 1 1 3 4 6)(1 1 1 1 1 1 1 1 1 1 4 9)(1 1 1 1 1 1 1 1 1 1 6 7)(1 1 1 1 1 1 1 1 1 3 3 4 4)(1 1 1 1 1 1 1 1 1 3 4 7)(1 1 1 1 1 1 1 1 1 4 4 6)(1 1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 1 3 3 3 3 3)(1 1 1 1 1 1 1 1 3 3 3 6)(1 1...\"),\n        ],\n    )\n    def test_combinationSum(input_array: List[int], sum: int, expected_result: str):\n>       assert expected_result == combinationSum(input_array, sum)\nE       AssertionError: assert 'Empty' == '(1 1)(1 1)'\nE         - (1 1)(1 1)\nE         + Empty\n\nsrc/test/java/challenges/a20200530_combinationSum/test_combinationSum.py:46: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.challenges.a20200530_combinationSum"
  }, {
    "name" : "suite",
    "value" : "test_combinationSum"
  }, {
    "name" : "host",
    "value" : "fv-az199-122"
  }, {
    "name" : "thread",
    "value" : "1879-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_result",
    "value" : "'Empty'"
  }, {
    "name" : "input_array",
    "value" : "[5, 2, 2, 6]"
  }, {
    "name" : "sum",
    "value" : "3"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 37,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 37
      },
      "items" : [ {
        "uid" : "5670f8e73676f75a",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/92//#testresult/5670f8e73676f75a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620951226590,
          "stop" : 1620951226591,
          "duration" : 1
        }
      }, {
        "uid" : "fa455abe3f80c588",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/91//#testresult/fa455abe3f80c588",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620951214385,
          "stop" : 1620951214385,
          "duration" : 0
        }
      }, {
        "uid" : "4223f1bb2e4dada7",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/90//#testresult/4223f1bb2e4dada7",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620951121836,
          "stop" : 1620951121836,
          "duration" : 0
        }
      }, {
        "uid" : "2c908a7945f12479",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/89//#testresult/2c908a7945f12479",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620950096689,
          "stop" : 1620950096689,
          "duration" : 0
        }
      }, {
        "uid" : "eaa3e4316ee01708",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/88//#testresult/eaa3e4316ee01708",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620933877393,
          "stop" : 1620933877393,
          "duration" : 0
        }
      }, {
        "uid" : "36f1bd4b2e300c49",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/87//#testresult/36f1bd4b2e300c49",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620917155426,
          "stop" : 1620917155426,
          "duration" : 0
        }
      }, {
        "uid" : "988f99742387c6a8",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/86//#testresult/988f99742387c6a8",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620892762884,
          "stop" : 1620892762885,
          "duration" : 1
        }
      }, {
        "uid" : "a336f545ae66f29d",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/85//#testresult/a336f545ae66f29d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620888189946,
          "stop" : 1620888189947,
          "duration" : 1
        }
      }, {
        "uid" : "2832f7f15e31cfc3",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/84//#testresult/2832f7f15e31cfc3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620887626755,
          "stop" : 1620887626755,
          "duration" : 0
        }
      }, {
        "uid" : "1f270da1d0eab191",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/83//#testresult/1f270da1d0eab191",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620764607797,
          "stop" : 1620764607797,
          "duration" : 0
        }
      }, {
        "uid" : "f25a20b9a71ae8d1",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/82//#testresult/f25a20b9a71ae8d1",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620720719343,
          "stop" : 1620720719344,
          "duration" : 1
        }
      }, {
        "uid" : "18c13f0c68b1e326",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/81//#testresult/18c13f0c68b1e326",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620719097639,
          "stop" : 1620719097640,
          "duration" : 1
        }
      }, {
        "uid" : "fe431ca710e18890",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/80//#testresult/fe431ca710e18890",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620663603496,
          "stop" : 1620663603496,
          "duration" : 0
        }
      }, {
        "uid" : "2ffcd40c0931ac50",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/79//#testresult/2ffcd40c0931ac50",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620660718725,
          "stop" : 1620660718726,
          "duration" : 1
        }
      }, {
        "uid" : "640c2e25bfc72c6a",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/78//#testresult/640c2e25bfc72c6a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620660373484,
          "stop" : 1620660373485,
          "duration" : 1
        }
      }, {
        "uid" : "c2093a09f6942be3",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/77//#testresult/c2093a09f6942be3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620634842290,
          "stop" : 1620634842290,
          "duration" : 0
        }
      }, {
        "uid" : "15da6760f4e79737",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/76//#testresult/15da6760f4e79737",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620634246375,
          "stop" : 1620634246375,
          "duration" : 0
        }
      }, {
        "uid" : "beff2fb412c77214",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/75//#testresult/beff2fb412c77214",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620633862252,
          "stop" : 1620633862252,
          "duration" : 0
        }
      }, {
        "uid" : "84daf8971bdaf0fc",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/74//#testresult/84daf8971bdaf0fc",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620632837475,
          "stop" : 1620632837476,
          "duration" : 1
        }
      }, {
        "uid" : "f04417b2254fc055",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/73//#testresult/f04417b2254fc055",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty",
        "time" : {
          "start" : 1620588771445,
          "stop" : 1620588771446,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e53a2afc8ca2da0d.json",
  "parameterValues" : [ "'Empty'", "[5, 2, 2, 6]", "3" ]
}