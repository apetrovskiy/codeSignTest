<div class="-flex -scroll -padding-16 -space-v-16"><div class="-layout-h -space-h-16"><div class="-layout-h -space-h-4 -center-center"><div class="icon -size-16 -color-green"><div class="-layout-h -center"><svg width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm-1.43-3c-1.642-.344-2.462-1.136-2.462-2.376V9.612c0-.688-.37-1.032-1.108-1.032V7.42c.739 0 1.108-.346 1.108-1.037V5.31c.013-.613.225-1.11.636-1.487.414-.378 1.023-.653 1.825-.823L7 3.9c-.574.163-.873.621-.896 1.374v1.109c0 .763-.421 1.301-1.265 1.615.844.313 1.265.853 1.265 1.62v1.103c.023.753.322 1.211.896 1.374L6.57 13zm2.86 0c1.642-.344 2.462-1.136 2.462-2.376V9.612c0-.688.37-1.032 1.108-1.032V7.42c-.739 0-1.108-.346-1.108-1.037V5.31c-.013-.613-.225-1.11-.636-1.487-.414-.378-1.023-.653-1.825-.823L9 3.9c.574.163.873.621.896 1.374v1.109c0 .763.421 1.301 1.265 1.615-.844.313-1.265.853-1.265 1.62v1.103c-.023.753-.322 1.211-.896 1.374l.43.905z"></path></svg></div></div><p class="-bold -font-size-14 -capitalize">codewriting</p></div></div><div class="markdown -arial"><p><em>Avoid using built-in big integers to solve this challenge. Implement them yourself, since this is what you would be asked to do during a real interview.</em></p>
<p>Given two binary strings <code>a</code> and <code>b</code>, add them together and return the resulting string.</p>
<p><span class="markdown--header" style="color:#2b3b52;font-size:1.4em">Example</span></p>
<ul>
<li>For <code>a = "1000"</code> and <code>b = "111"</code>, the output should be<br>
<code>addBinaryStrings(a, b) = "1111"</code>;</li>
<li>For <code>a = "1"</code> and <code>b = "1"</code>, the output should be<br>
<code>addBinaryStrings(a, b) = "10"</code>.</li>
</ul>
<p><span class="markdown--header" style="color:#2b3b52;font-size:1.4em">Input/Output</span></p>
<ul>
<li>
<p><strong>[execution time limit] 3 seconds (cs)</strong></p>
</li>
<li>
<p><strong>[input] string a</strong></p>
<p>A string that can contain only <code>0</code> and <code>1</code>.</p>
<p><em>Guaranteed constraints:</em><br>
<code>0 ≤ a.length ≤ 10<sup>5</sup></code>.</p>
</li>
<li>
<p><strong>[input] string b</strong></p>
<p>A string that can contain only <code>0</code> and <code>1</code>.</p>
<p><em>Guaranteed constraints:</em><br>
<code>0 ≤ b.length ≤ 10<sup>5</sup></code>.</p>
</li>
<li>
<p><strong>[output] string</strong></p>
<p>The result of adding strings <code>a</code> and <code>b</code>, without any leading zeros.</p>
</li>
</ul>
<p><strong>[C#] Syntax Tips</strong></p>
<pre><code class="language-cs"><span class="hljs-comment">// Prints help message to the console</span>
<span class="hljs-comment">// Returns a string</span>
<span class="hljs-function"><span class="hljs-keyword">string</span> <span class="hljs-title">helloWorld</span>(<span class="hljs-params"><span class="hljs-keyword">string</span> name</span>)</span> {
    Console.Write(<span class="hljs-string">"This prints to the console when you Run Tests"</span>);
    <span class="hljs-keyword">return</span> <span class="hljs-string">"Hello, "</span> + name;
}

</code></pre>
</div></div>
