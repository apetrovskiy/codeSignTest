<div class="-flex -scroll -padding-16 -space-v-16">
    <div class="-layout-h -space-h-16">
        <div class="-layout-h -space-h-4 -center-center">
            <div class="icon -size-16 -color-green">
                <div class="-layout-h -center"><svg width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm-1.43-3c-1.642-.344-2.462-1.136-2.462-2.376V9.612c0-.688-.37-1.032-1.108-1.032V7.42c.739 0 1.108-.346 1.108-1.037V5.31c.013-.613.225-1.11.636-1.487.414-.378 1.023-.653 1.825-.823L7 3.9c-.574.163-.873.621-.896 1.374v1.109c0 .763-.421 1.301-1.265 1.615.844.313 1.265.853 1.265 1.62v1.103c.023.753.322 1.211.896 1.374L6.57 13zm2.86 0c1.642-.344 2.462-1.136 2.462-2.376V9.612c0-.688.37-1.032 1.108-1.032V7.42c-.739 0-1.108-.346-1.108-1.037V5.31c-.013-.613-.225-1.11-.636-1.487-.414-.378-1.023-.653-1.825-.823L9 3.9c.574.163.873.621.896 1.374v1.109c0 .763.421 1.301 1.265 1.615-.844.313-1.265.853-1.265 1.62v1.103c-.023.753-.322 1.211-.896 1.374l.43.905z"></path></svg></div>
            </div>
            <p class="-bold -font-size-14 -capitalize">codewriting</p>
        </div>
    </div>
    <div class="markdown -arial">
        <p>You are given two arrays of integers <code>a</code> and <code>b</code> of the same length, and an integer <code>k</code>. We will be iterating through array <code>a</code> from left to right, and simultaneously through array <code>b</code> from
            right to left, and looking at pairs <code>(x, y)</code>, where <code>x</code> is from <code>a</code> and <code>y</code> is from <code>b</code>. Such a pair is called <em>tiny</em> if the concatenation <code>xy</code> is strictly less than
            <code>k</code>.</p>
        <p>Your task is to return the number of <em>tiny</em> pairs that you'll encounter during the simultaneous iteration through <code>a</code> and <code>b</code>.</p>
        <p><span class="markdown--header" style="color:#2b3b52;font-size:1.4em">Example</span></p>
        <ul>
            <li>
                <p>For <code>a = [1, 2, 3]</code>, <code>b = [1, 2, 3]</code>, and <code>k = 31</code>, the output should be<br>
                    <code>countTinyPairs(a, b, k) = 2</code>.</p>
                <p>We're considering the following pairs during iteration:</p>
                <ul>
                    <li><code>(1, 3)</code>. Their concatenation equals <code>13</code>, which is less than <code>31</code>, so the pair is <em>tiny</em>;</li>
                    <li><code>(2, 2)</code>. Their concatenation equals <code>22</code>, which is less than <code>31</code>, so the pair is <em>tiny</em>;</li>
                    <li><code>(3, 1)</code>. Their concatenation equals <code>31</code>, which is not less than <code>31</code>, so the pair is not <em>tiny</em>.</li>
                </ul>
                <p>As you can see, there are <code>2</code> <em>tiny</em> pairs during the iteration, so the answer is <code>2</code>.</p>
            </li>
            <li>
                <p>For <code>a = [16, 1, 4, 2, 14]</code>, <code>b = [7, 11, 2, 0, 15]</code>, and <code>k = 743</code>, the output should be<br>
                    <code>countTinyPairs(a, b, k) = 4</code>.</p>
                <p>We're considering the following pairs during iteration:</p>
                <ul>
                    <li><code>(16, 15)</code>. Their concatenation equals <code>1615</code>, which is greater than <code>743</code>, so the pair is not <em>tiny</em>;</li>
                    <li><code>(1, 0)</code>. Their concatenation equals <code>10</code>, which is less than <code>743</code>, so the pair is <em>tiny</em>;</li>
                    <li><code>(4, 2)</code>. Their concatenation equals <code>42</code>, which is less than <code>743</code>, so the pair is <em>tiny</em>.</li>
                    <li><code>(2, 11)</code>. Their concatenation equals <code>211</code>, which is less than <code>743</code>, so the pair is <em>tiny</em>;</li>
                    <li><code>(14, 7)</code>. Their concatenation equals <code>147</code>, which is less than <code>743</code>, so the pair is <em>tiny</em>.</li>
                </ul>
                <p>There are <code>4</code> <em>tiny</em> pairs during the iteration, so the answer is <code>4</code>.</p>
            </li>
        </ul>
        <p><span class="markdown--header" style="color:#2b3b52;font-size:1.4em">Input/Output</span></p>
        <ul>
            <li>
                <p><strong>[execution time limit] 4 seconds (rb)</strong></p>
            </li>
            <li>
                <p><strong>[input] array.integer a</strong></p>
                <p>An array of non-negative integers.</p>
                <p><em>Guaranteed constraints:</em><br>
                    <code>0 ≤ a.length ≤ 10<sup>5</sup></code>,<br>
                    <code>0 ≤ a[i] ≤ 10<sup>4</sup></code>.</p>
            </li>
            <li>
                <p><strong>[input] array.integer b</strong></p>
                <p>An array of non-negative integers.</p>
                <p><em>Guaranteed constraints:</em><br>
                    <code>b.length = a.length</code>,<br>
                    <code>0 ≤ b[i] ≤ 10<sup>4</sup></code>.</p>
            </li>
            <li>
                <p><strong>[input] integer k</strong></p>
                <p>An integer to compare concatenated pairs with.</p>
                <p><em>Guaranteed constraints:</em><br>
                    <code>0 ≤ k ≤ 10<sup>9</sup></code>.</p>
            </li>
            <li>
                <p><strong>[output] integer</strong></p>
                <p>The number of <em>tiny</em> pairs during the iteration.</p>
            </li>
        </ul>
        <p><strong>[Ruby] Syntax Tips</strong></p>
        <pre><code class="language-ruby"><span class="hljs-comment"># Prints help message to the console</span>
<span class="hljs-comment"># Returns a string</span>
<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">helloWorld</span><span class="hljs-params">(name)</span></span>
    print <span class="hljs-string">"This prints to the console when you Run Tests"</span>
    <span class="hljs-keyword">return</span> <span class="hljs-string">"Hello, "</span> + name
<span class="hljs-keyword">end</span>

</code></pre>
    </div>
</div>