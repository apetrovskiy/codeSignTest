<div class="-flex -scroll -padding-16 -space-v-16">
    <div class="-layout-h -space-h-16">
        <div class="-layout-h -space-h-4 -center-center">
            <div class="icon -size-16 -color-green">
                <div class="-layout-h -center"><svg width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm-1.43-3c-1.642-.344-2.462-1.136-2.462-2.376V9.612c0-.688-.37-1.032-1.108-1.032V7.42c.739 0 1.108-.346 1.108-1.037V5.31c.013-.613.225-1.11.636-1.487.414-.378 1.023-.653 1.825-.823L7 3.9c-.574.163-.873.621-.896 1.374v1.109c0 .763-.421 1.301-1.265 1.615.844.313 1.265.853 1.265 1.62v1.103c.023.753.322 1.211.896 1.374L6.57 13zm2.86 0c1.642-.344 2.462-1.136 2.462-2.376V9.612c0-.688.37-1.032 1.108-1.032V7.42c-.739 0-1.108-.346-1.108-1.037V5.31c-.013-.613-.225-1.11-.636-1.487-.414-.378-1.023-.653-1.825-.823L9 3.9c.574.163.873.621.896 1.374v1.109c0 .763.421 1.301 1.265 1.615-.844.313-1.265.853-1.265 1.62v1.103c-.023.753-.322 1.211-.896 1.374l.43.905z"></path></svg></div>
            </div>
            <p class="-bold -font-size-14 -capitalize">codewriting</p>
        </div>
    </div>
    <div class="markdown -arial">
        <p>Given an array of integers <code>a</code>, your task is to count the number of pairs <code>i</code> and <code>j</code> (where <code>0 ≤ i &lt; j &lt; a.length</code>), such that <code>a[i]</code> and <code>a[j]</code> are <strong>digit anagrams</strong>.</p>
        <p>Two integers are considered to be digit anagrams if they contain the same digits. In other words, one can be obtained from the other by rearranging the digits (or trivially, if the numbers are equal). For example, <code>54275</code> and <code>45572</code>            are digit anagrams, but <code>321</code> and <code>782</code> are not (since they don't contain the same digits). <code>220</code> and <code>22</code> are also not considered as digit anagrams, since they don't even have the same number of
            digits.</p>
        <p><span class="markdown--header" style="color:#2b3b52;font-size:1.4em">Example</span></p>
        <p>For <code>a = [25, 35, 872, 228, 53, 278, 872]</code>, the output should be <code>digitAnagrams(a) = 4</code>.</p>
        <p>There are <code>4</code> pairs of digit anagrams:</p>
        <ul>
            <li><code>a[1] = 35</code> and <code>a[4] = 53</code> (<code>i = 1</code> and <code>j = 4</code>),</li>
            <li><code>a[2] = 872</code> and <code>a[5] = 278</code> (<code>i = 2</code> and <code>j = 5</code>),</li>
            <li><code>a[2] = 872</code> and <code>a[6] = 872</code> (<code>i = 2</code> and <code>j = 6</code>),</li>
            <li><code>a[5] = 278</code> and <code>a[6] = 872</code> (<code>i = 5</code> and <code>j = 6</code>).</li>
        </ul>
        <p><span class="markdown--header" style="color:#2b3b52;font-size:1.4em">Input/Output</span></p>
        <ul>
            <li>
                <p><strong>[execution time limit] 3 seconds (cs)</strong></p>
            </li>
            <li>
                <p><strong>[input] array.integer a</strong></p>
                <p>An array of non-negative integers.</p>
                <p><em>Guaranteed constraints:</em><br>
                    <code>1 ≤ a.length ≤ 10<sup>5</sup></code>,<br>
                    <code>0 ≤ a[i] ≤ 10<sup>9</sup></code>.</p>
            </li>
            <li>
                <p><strong>[output] integer64</strong></p>
                <p>The number of pairs <code>i</code> and <code>j</code>, such that <code>a[i]</code> and <code>a[j]</code> are digit anagrams.</p>
            </li>
        </ul>
        <p><strong>[C#] Syntax Tips</strong></p>
        <pre><code class="language-cs"><span class="hljs-comment">// Prints help message to the console</span>
<span class="hljs-comment">// Returns a string</span>
<span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">helloWorld</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>)</span> {
    Console.Write(<span class="hljs-string">"This prints to the console when you Run Tests"</span>);
    <span class="hljs-keyword">return</span> <span class="hljs-string">"Hello, "</span> + name;
}

</code></pre>
    </div>
</div>