============================= Coffee ===================================

[ l
  m 
  s 
  t ] = args
  
# didn't knew coffee-script has above stuff!

return ~t && Math.max m - 10*~-s - t*m/2/l, m/2

============================= Coffee ===================================
[L
M
S
T] = args
L = M - ~-S * 10 - T / L * M /= 2
return `~T?L<M?M:L:0`   

============================= Coffee ===================================
[l
m
s
t] = args
f = m - --s * 10 - t / l * m /= 2
return `~t?f<m?m:f:0`

============================= Coffee ===================================
[l
m
s
t] = args
return !!~t * m -= Math.min m /= 2, --s * 10 + t * m / l

============================= Coffee ===================================
[L
 M
 S
 T] = args
 
return (T > -1) * Math.max M / 2, M - T * M / 2 / L - 10 * ~-S

============================= Coffee ===================================
[l
 m
 s
 t] = args

return t+1 && m - ((m < s = t*m/l + 20*~-s) && m || s)/2

============================= Coffee ===================================
[l
m
s
t]=args
h = m/2
r = m-h/l*t- --s*10
r = h if r < h
return r *= t>=0

============================= Coffee ===================================
[l
 m
 s
 t] = args

return `t<0?0:Math.max(m-m/2/l*t-s*10+10,m/2)`

============================= Julia ===================================
marathonTaskScore(a, b, c, d) = (d ≥ 0)max(b, 2b - 20c + 20 - b * d / a) / 2


============================= Julia ===================================
marathonTaskScore(L,M,S,T) = (T > -1)max(M / 2, M - T * M / 2 / L - 10 * ~-S)

============================= Julia ===================================
marathonTaskScore(l, m, s, t) = t < 0 ? 0 : max(m - 10 * ~-s - t*m/2/l, m/2)

============================= Py 3 ===================================
l, m, s, t = eval(dir()[0])
return ~t and max(m - 10*~-s - t*m/2/l, m/2)

============================= Py 2 ===================================
l, m, s, t = eval(dir()[0])
return ~t and max(m - 10*~-s - t*m/2/l, m/2)

============================= Julia ===================================
marathonTaskScore(l, m, s, t) = t < 0 ? 0 : max(m - m÷2÷l * t - s*10 + 10, m÷2)

============================= Ruby ===================================
def method_missing _, l, m, n, t
  t<0? 0 :  m-[m/=2,10*~-n+t*m/l].min
end

============================= Ruby ===================================
def method_missing _,l,m,s,t
    t < 0 ? 0 : m-[m, m/l*t+20*s-20].min/2
end

============================= Py 2 ===================================
L, M, S, T = eval(dir()[0])
return (T >= 0) * max(M - T * M / 2 / L - ~-S * 10, M / 2)

============================= Ruby ===================================
def method_missing _, l, m, s, t 
    t < 0 ? 0 : m - [m/=2,m/l*t + 10*~-s].min
end

============================= Ruby ===================================
def marathonTaskScore n, x, s, t
   t < 0 ? 0 : x - [t * x/n + 20 * ~-s, x].min / 2 
end

============================= Py 3 ===================================
a, b, c, d = eval(dir()[0])
return max(b / 2, b - d * b / 2 / a - 10 * c + 10) * (d >= 0)

============================= Dart ===================================
marathonTaskScore(l, m, s, t) => t < 0 ? 0 : max(m - m/2/l * t - s*10 + 10, m/2);
