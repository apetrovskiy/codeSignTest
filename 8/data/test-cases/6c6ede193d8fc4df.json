{
  "uid" : "6c6ede193d8fc4df",
  "name" : "test_running_water[cap2-80-True]",
  "fullName" : "src.test.java.challenges.a20201217_runningWater.test_running_water#test_running_water",
  "historyId" : "d4e6dbdc944e84c1da86a6e42f3cf5a4",
  "time" : {
    "start" : 1619385482260,
    "stop" : 1619385482260,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
  "statusTrace" : "cap = [80, 61, 76], volume = 80, expected_result = True\n\n    @pytest.mark.parametrize(\"cap,volume,expected_result\", test_data)\n    def test_running_water(cap: List[int], volume: int, expected_result: bool):\n>       assert expected_result == runningWater(cap, volume)\nE       assert True == False\nE        +  where False = runningWater([80, 61, 76], 80)\n\nsrc/test/java/challenges/a20201217_runningWater/test_running_water.py:24: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.challenges.a20201217_runningWater"
  }, {
    "name" : "suite",
    "value" : "test_running_water"
  }, {
    "name" : "host",
    "value" : "fv-az193-886"
  }, {
    "name" : "thread",
    "value" : "2227-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.a20201217_runningWater.test_running_water"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "cap",
    "value" : "[80, 61, 76]"
  }, {
    "name" : "expected_result",
    "value" : "True"
  }, {
    "name" : "volume",
    "value" : "80"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 13,
        "broken" : 0,
        "skipped" : 3,
        "passed" : 0,
        "unknown" : 0,
        "total" : 16
      },
      "items" : [ {
        "uid" : "90cde1e177478f0d",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/6//#testresult/90cde1e177478f0d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1619382149717,
          "stop" : 1619382149717,
          "duration" : 0
        }
      }, {
        "uid" : "6a0b597a53670ffe",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/5//#testresult/6a0b597a53670ffe",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1619382116725,
          "stop" : 1619382116726,
          "duration" : 1
        }
      }, {
        "uid" : "8e229d6c07b4be76",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/4//#testresult/8e229d6c07b4be76",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1619266188451,
          "stop" : 1619266188451,
          "duration" : 0
        }
      }, {
        "uid" : "ad6bebced26eca35",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/3//#testresult/ad6bebced26eca35",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1618980269228,
          "stop" : 1618980269228,
          "duration" : 0
        }
      }, {
        "uid" : "2360846b808fa750",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/2//#testresult/2360846b808fa750",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1618948657957,
          "stop" : 1618948657957,
          "duration" : 0
        }
      }, {
        "uid" : "a3a1ffb2f11f73d4",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/1//#testresult/a3a1ffb2f11f73d4",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1618611745200,
          "stop" : 1618611745200,
          "duration" : 0
        }
      }, {
        "uid" : "6aeccae0dd844f27",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/11//#testresult/6aeccae0dd844f27",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1618611764016,
          "stop" : 1618611764017,
          "duration" : 1
        }
      }, {
        "uid" : "13db11abe296fad6",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/10//#testresult/13db11abe296fad6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1618611721485,
          "stop" : 1618611721485,
          "duration" : 0
        }
      }, {
        "uid" : "1ab6e14cb4f8abe6",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/9//#testresult/1ab6e14cb4f8abe6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1618442759059,
          "stop" : 1618442759059,
          "duration" : 0
        }
      }, {
        "uid" : "3870472387ba0285",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/8//#testresult/3870472387ba0285",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1618442394482,
          "stop" : 1618442394482,
          "duration" : 0
        }
      }, {
        "uid" : "84292f7e6c8eb19c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/7//#testresult/84292f7e6c8eb19c",
        "status" : "skipped",
        "statusDetails" : "Skipped: TODO: no way of currently testing this",
        "time" : {
          "start" : 1618442234462,
          "stop" : 1618442234462,
          "duration" : 0
        }
      }, {
        "uid" : "248f2d226ff2b16b",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/6//#testresult/248f2d226ff2b16b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1618441924119,
          "stop" : 1618441924119,
          "duration" : 0
        }
      }, {
        "uid" : "4475a5e71b10fe6c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/5//#testresult/4475a5e71b10fe6c",
        "status" : "skipped",
        "statusDetails" : "Skipped: TODO: no way of currently testing this",
        "time" : {
          "start" : 1618441741353,
          "stop" : 1618441741353,
          "duration" : 0
        }
      }, {
        "uid" : "784878835842bb21",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/4//#testresult/784878835842bb21",
        "status" : "skipped",
        "statusDetails" : "Skipped: TODO: no way of currently testing this",
        "time" : {
          "start" : 1618441554853,
          "stop" : 1618441554853,
          "duration" : 0
        }
      }, {
        "uid" : "da3b6eb0d85aaab3",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/2//#testresult/da3b6eb0d85aaab3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([80, 61, 76], 80)",
        "time" : {
          "start" : 1618440184317,
          "stop" : 1618440184317,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "6c6ede193d8fc4df.json",
  "parameterValues" : [ "[80, 61, 76]", "True", "80" ]
}