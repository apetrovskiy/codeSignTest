{
  "uid" : "50d33a22a530ca75",
  "name" : "test_combinationSum[input_array17-4-(4)]",
  "fullName" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum#test_combinationSum",
  "historyId" : "b66d464fcb1eb3f112a0d5c31696f896",
  "time" : {
    "start" : 1620887626834,
    "stop" : 1620887626834,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
  "statusTrace" : "input_array = [8, 6, 4, 7, 6, 5, ...], sum = 4, expected_result = '(4)'\n\n    @pytest.mark.parametrize(\n        \"input_array,sum,expected_result\",\n        [\n            ([2, 3, 5, 9], 9, \"(2 2 2 3)(2 2 5)(3 3 3)(9)\"),\n            ([2, 4, 6, 8], 8, \"(2 2 2 2)(2 2 4)(2 6)(4 4)(8)\"),\n            ([8, 1, 8, 6, 8], 12, \"(1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 6)(1 1 1 1 8)(6 6)\"),\n            ([7, 2, 6, 5], 16, \"(2 2 2 2 2 2 2 2)(2 2 2 2 2 6)(2 2 2 5 5)(2 2 5 7)(2 2 6 6)(2 7 7)(5 5 6)\"),\n            # 5\n            ([6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9], 6, \"(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\"),\n            ([5, 2, 2, 6], 3, \"Empty\"),\n            ([4, 6, 4, 2], 7, \"Empty\"),\n            ([8, 7, 1], 22, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 8)(1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 7 8)(1 1 1 1 1 1 8 8)(1 7 7 7)(7 7 8)\"),\n            # 9\n            ([6, 5, 6, 3, 3, 4, 3, 2, 2, 9, 9], 24, \"(2 2 2 2 2 2 2 2 2 2 2 2)(2 2 2 2 2 2 2 2 2 2 4)(2 2 2 2 2 2 2 2 2 3 3)(2 2 2 2 2 2 2 2 2 6)(2 2 2 2 2 2 2 2 3 5)(2 2 2 2 2 2 2 2 4 4)(2 2 2 2 2 2 2 3 3 4)(2 2 2 2 2 2 2 4 6)(2 2 2 2 2 2 2 5 5)(2 2 2 2 2 2 3 3 3 3)(2 2 2 2 2 2 3 3 6)(2 2 2 2 2 2 3 4 5)(2 2 2 2 2 2 3 9)(2 2 2 2 2 2 4 4 4)(2 2 2 2 2 2 6 6)(2 2 2 2 2 3 3 3 5)(2 2 2 2 2 3 3 4 4)(2 2 2 2 2 3 5 6)(2 2 2 2 2 4 4 6)(2 2 2 2 2 4 5 5)(2 2 2 2 2 5 9)(2 2 2 2 3 3 3 3 4)(2 2 2 2 3 3 4 6)(2 2 2 2 3 3 5 5)(2 2 2 2 3 4 4 5)(2 2 2 2 3 4 9)(2 2 2 2 4 4 4 4)(2 2 2 2 4 6 6)(2 2 2 2 5 5 6)(2 2 2 3 3 3 3 3 3)(2 2 2 3 3 3 3 6)(2 2 2 3 3 3 4 5)(2 2 2 3 3 3 9)(2 2 2 3 3 4 4 4)(2 2 2 3 3 6 6)(2 2 2 3 4 5 6)(2 2 2 3 5 5 5)(2 2 2 3 6 9)(2 2 2 4 4 4 6)(2 2 2 4 4 5 5)(2 2 2 4 5 9)(2 2 2 6 6 6)(2 2 2 9 9)(2 2 3 3 3 3 3 5)(2 2 3 3 3 3 4 4)(2 2 3 3 3 5 6)(2 2 3 3 4 4 6)(2 2 3 3 4 5 5)(2 2 3 3 5 9)(2 2 3 4 4 4 5)(2 2 3 4 4 9)(2 2 3 5 6 6)(2 2 4 4 4 4 4)(2 2 4 4 6 6)(2 2 4 5 5 6)(2 2 5 5 5 5)(2 2 5 6 9)(2 3 3 3 3 3 3 4)(2 3 3 3 3 4 6)(2 3 3 3 3 5 5)(2 3...\"),\n            ([6, 5, 5, 7], 1, \"Empty\"),\n            ([7, 3, 9, 8, 4, 5], 8, \"(3 5)(4 4)(8)\"),\n            ([1, 1, 1, 3, 7, 3], 15, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 3 3 3)(1 1 1 1 1 3 7)(1 1 1 3 3 3 3)(1 1 3 3 7)(1 7 7)(3 3 3 3 3)\"),\n            # 13\n            ([6, 8, 7, 7, 9], 14, \"(6 8)(7 7)\"),\n            ([7, 3, 9, 2, 7, 7], 2, \"(2)\"),\n            ([6, 3, 7], 18, \"(3 3 3 3 3 3)(3 3 3 3 6)(3 3 6 6)(6 6 6)\"),\n            ([3, 8, 3, 9], 17, \"(3 3 3 8)(8 9)\"),\n            # 17\n            ([4, 3, 1], 3, \"(1 1 1)(3)\"),\n            ([8, 6, 4, 7, 6, 5, 3, 6, 3], 4, \"(4)\"),\n            ([3, 9, 4], 20, \"(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\"),\n            ([1, 8], 16, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\"),\n            # 21\n            ([4, 7], 24, \"(4 4 4 4 4 4)\"),\n            ([2, 3, 7, 5, 3, 3, 8, 9, 6, 2], 1, \"Empty\"),\n            ([5, 9, 5, 7, 8], 13, \"(5 8)\"),\n            ([7, 1, 9, 5, 1, 8, 5, 3], 13, \"(1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 5)(1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 7)(1 1 1 1 1 3 5)(1 1 1 1 1 8)(1 1 1 1 3 3 3)(1 1 1 1 9)(1 1 1 3 7)(1 1 1 5 5)(1 1 3 3 5)(1 1 3 8)(1 3 3 3 3)(1 3 9)(1 5 7)(3 3 7)(3 5 5)(5 8)\"),\n            # 25\n            ([6, 3, 4, 8, 9, 8, 9, 2, 4, 8], 19, \"(2 2 2 2 2 2 2 2 3)(2 2 2 2 2 2 3 4)(2 2 2 2 2 3 3 3)(2 2 2 2 2 3 6)(2 2 2 2 2 9)(2 2 2 2 3 4 4)(2 2 2 2 3 8)(2 2 2 3 3 3 4)(2 2 2 3 4 6)(2 2 2 4 9)(2 2 3 3 3 3 3)(2 2 3 3 3 6)(2 2 3 3 9)(2 2 3 4 4 4)(2 2 3 4 8)(2 2 3 6 6)(2 2 6 9)(2 3 3 3 4 4)(2 3 3 3 8)(2 3 4 4 6)(2 3 6 8)(2 4 4 9)(2 8 9)(3 3 3 3 3 4)(3 3 3 4 6)(3 3 4 9)(3 4 4 4 4)(3 4 4 8)(3 4 6 6)(3 8 8)(4 6 9)\"),\n            ([4, 7, 7, 1, 3, 2, 8, 8, 9, 3], 7, \"(1 1 1 1 1 1 1)(1 1 1 1 1 2)(1 1 1 1 3)(1 1 1 2 2)(1 1 1 4)(1 1 2 3)(1 2 2 2)(1 2 4)(1 3 3)(2 2 3)(3 4)(7)\"),\n            ([8, 5], 4, \"Empty\"),\n            ([7, 1, 3, 1, 3, 4, 7, 3, 9, 6], 23, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 9)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 4 6)(1 1 1 1 1 1 1 1 1 1 1 1 3 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 4 7)(1 1 1 1 1 1 1 1 1 1 1 3 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 3 3 6)(1 1 1 1 1 1 1 1 1 1 1 3 9)(1 1 1 1 1 1 1 1 1 1 1 4 4 4)(1 1 1 1 1 1 1 1 1 1 1 6 6)(1 1 1 1 1 1 1 1 1 1 3 3 3 4)(1 1 1 1 1 1 1 1 1 1 3 3 7)(1 1 1 1 1 1 1 1 1 1 3 4 6)(1 1 1 1 1 1 1 1 1 1 4 9)(1 1 1 1 1 1 1 1 1 1 6 7)(1 1 1 1 1 1 1 1 1 3 3 4 4)(1 1 1 1 1 1 1 1 1 3 4 7)(1 1 1 1 1 1 1 1 1 4 4 6)(1 1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 1 3 3 3 3 3)(1 1 1 1 1 1 1 1 3 3 3 6)(1 1...\"),\n        ],\n    )\n    def test_combinationSum(input_array: List[int], sum: int, expected_result: str):\n>       assert expected_result == combinationSum(input_array, sum)\nE       AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\nE         - (1 1)(1 1)(1 1)\nE         + (4)\n\nsrc/test/java/challenges/a20200530_combinationSum/test_combinationSum.py:46: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.challenges.a20200530_combinationSum"
  }, {
    "name" : "suite",
    "value" : "test_combinationSum"
  }, {
    "name" : "host",
    "value" : "fv-az173-805"
  }, {
    "name" : "thread",
    "value" : "2688-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_result",
    "value" : "'(4)'"
  }, {
    "name" : "input_array",
    "value" : "[8, 6, 4, 7, 6, 5, 3, 6, 3]"
  }, {
    "name" : "sum",
    "value" : "4"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 28,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 28
      },
      "items" : [ {
        "uid" : "947af1d51c10aad2",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/83//#testresult/947af1d51c10aad2",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620764607879,
          "stop" : 1620764607879,
          "duration" : 0
        }
      }, {
        "uid" : "6a046593ec8a11d6",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/82//#testresult/6a046593ec8a11d6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620720719417,
          "stop" : 1620720719417,
          "duration" : 0
        }
      }, {
        "uid" : "92bc82b4bdde1527",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/81//#testresult/92bc82b4bdde1527",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620719097730,
          "stop" : 1620719097731,
          "duration" : 1
        }
      }, {
        "uid" : "e08954985d8b8a70",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/80//#testresult/e08954985d8b8a70",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620663603569,
          "stop" : 1620663603569,
          "duration" : 0
        }
      }, {
        "uid" : "86419b880b2c972b",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/79//#testresult/86419b880b2c972b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620660718819,
          "stop" : 1620660718819,
          "duration" : 0
        }
      }, {
        "uid" : "190fe355ebddd770",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/78//#testresult/190fe355ebddd770",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620660373567,
          "stop" : 1620660373567,
          "duration" : 0
        }
      }, {
        "uid" : "dcf6bcf73510ad27",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/77//#testresult/dcf6bcf73510ad27",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620634842373,
          "stop" : 1620634842373,
          "duration" : 0
        }
      }, {
        "uid" : "f9bad90f878cd0d4",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/76//#testresult/f9bad90f878cd0d4",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620634246454,
          "stop" : 1620634246454,
          "duration" : 0
        }
      }, {
        "uid" : "5d5504c00f7bfbab",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/75//#testresult/5d5504c00f7bfbab",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620633862349,
          "stop" : 1620633862350,
          "duration" : 1
        }
      }, {
        "uid" : "5e49556205cd78af",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/74//#testresult/5e49556205cd78af",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620632837555,
          "stop" : 1620632837555,
          "duration" : 0
        }
      }, {
        "uid" : "e438151e4fa19b4a",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/73//#testresult/e438151e4fa19b4a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620588771517,
          "stop" : 1620588771517,
          "duration" : 0
        }
      }, {
        "uid" : "3c74bb6143348675",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/72//#testresult/3c74bb6143348675",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620587343668,
          "stop" : 1620587343668,
          "duration" : 0
        }
      }, {
        "uid" : "4ceb08f271fbfb0c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/71//#testresult/4ceb08f271fbfb0c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620582483306,
          "stop" : 1620582483306,
          "duration" : 0
        }
      }, {
        "uid" : "bc42c8c0b19e77f2",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/70//#testresult/bc42c8c0b19e77f2",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620582063404,
          "stop" : 1620582063404,
          "duration" : 0
        }
      }, {
        "uid" : "a523d8578d6d7f6",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/69//#testresult/a523d8578d6d7f6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620581514323,
          "stop" : 1620581514323,
          "duration" : 0
        }
      }, {
        "uid" : "8d9dfb43c03fa69f",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/68//#testresult/8d9dfb43c03fa69f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620581310192,
          "stop" : 1620581310192,
          "duration" : 0
        }
      }, {
        "uid" : "43858e1c42b05f1d",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/67//#testresult/43858e1c42b05f1d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620580993524,
          "stop" : 1620580993524,
          "duration" : 0
        }
      }, {
        "uid" : "ee876502b59de5b",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/66//#testresult/ee876502b59de5b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620580708154,
          "stop" : 1620580708154,
          "duration" : 0
        }
      }, {
        "uid" : "e624514ce0f63164",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/65//#testresult/e624514ce0f63164",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620580025013,
          "stop" : 1620580025013,
          "duration" : 0
        }
      }, {
        "uid" : "fc9ec835955b89f8",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/64//#testresult/fc9ec835955b89f8",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4)' == '(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)\n  + (4)",
        "time" : {
          "start" : 1620579335496,
          "stop" : 1620579335496,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "50d33a22a530ca75.json",
  "parameterValues" : [ "'(4)'", "[8, 6, 4, 7, 6, 5, 3, 6, 3]", "4" ]
}